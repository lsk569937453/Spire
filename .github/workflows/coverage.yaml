name: 'release'

# This will trigger the action on each push to the `release` branch.
on:
  push:
    branches:
      - release

jobs:
  release:
    strategy:
      matrix:
        platform:
          - release_for: linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: silverwind
            name: silverwind-x86_64-unknown-linux-gnu.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: silverwind.exe
            name: silverwind-Windows-x86_64.zip
            command: build

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: silverwind
            name: silverwind-Darwin-x86_64.tar.gz
            command: build
          - release_for: macOS-arm64
            os: macOS-latest
            target: aarch64-apple-darwin	
            bin: silverwind
            name: silverwind-aarch64-apple-darwin.tar.gz
            command: build



    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Create Release Draft
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            licence
          draft: true
          tag_name: 0.0.10
          body: |
              Description of the release
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          working-directory: rust-proxy
          args: "--release"
          strip: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: rust-proxy/target/release/silverwind
        #   - name: 'Login to GitHub Container Registry'
        #   uses: docker/login-action@v1
        #   with:
        #     registry: ghcr.io
        #     username: ${{github.actor}}
        #     password: ${{secrets.GITHUB_TOKEN}}

        # - name: 'Build Inventory Image'
        #   run: |
        #     docker build . --tag ghcr.io/<your-GitHub-username>/store:latest
        #     docker push ghcr.io/<your-GitHub-username>/store:latest